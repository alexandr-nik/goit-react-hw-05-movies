{"version":3,"file":"static/js/264.b373425c.chunk.js","mappings":"gSAEaA,EAAKC,EAAAA,GAAAA,GAAH,gDAGFC,EAAUD,EAAAA,GAAAA,IAAH,gFAKPE,EAAUF,EAAAA,GAAAA,EAAH,gDAGPG,EAAIH,EAAAA,GAAAA,EAAH,yOAaDI,EAAKJ,EAAAA,GAAAA,GAAH,uEAKFK,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qNAWZO,EAAMP,EAAAA,GAAAA,IAAH,4CAGHQ,EAAaR,EAAAA,GAAAA,OAAH,6L,2BCoCvB,EAlEkB,WAAO,IAAD,IACdS,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAkBzC,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,wGAEUC,EAAAA,EAAAA,IAAUd,EAAI,CAClBe,OAAQH,EAAWG,SAClBC,MAAK,SAAAC,GAAO,OAAIb,EAAgBa,EAAQC,KAA5B,IAJnB,6DAMIC,EAAAA,EAAAA,GAAQ,SACF,IAAIC,MAAJ,MAPV,yDAFc,sBAad,OAbc,mCAYdC,GACOT,EAAWU,OACnB,GAAE,CAACtB,IACCG,EAAaH,GAElB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,CAAYwB,KAAK,SAASC,QArBf,kBAAMnB,EAASE,EAAf,EAqBX,0BAGA,SAACjB,EAAD,UAAKa,EAAasB,SAClB,UAACjC,EAAD,YACE,0BACE,gBACEkC,IACEvB,EAAawB,YAAb,yCACsCxB,EAAawB,aADnD,UAEOC,GAETC,IAAK1B,EAAasB,OAAStB,EAAa2B,cACxCC,MAAM,QACNC,OAAO,aAGX,4BACE,UAACvC,EAAD,wBAAoBU,EAAa8B,iBACjC,uBAAI9B,EAAa+B,kBAGrB,SAACxC,EAAD,sBACA,SAACC,EAAD,UACGQ,EAAagC,OAAOC,KAAI,SAAAC,GACvB,OAAO,8BAAkBA,EAAGC,KAArB,MAASD,EAAGrC,GACpB,OAEH,SAACN,EAAD,sCACA,SAACE,EAAD,CAAc2C,GAAG,OAAO9B,MAAO,CAAEC,KAAMH,GAAvC,mBAGA,SAACX,EAAD,CAAc2C,GAAG,UAAU9B,MAAO,CAAEC,KAAMH,GAA1C,sBAGA,SAAC,KAAD,MAGL,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const H3 = styled.h3`\n  margin-bottom: 10px;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 20px;\n`;\nexport const Averege = styled.p`\n  margin-bottom: 10px;\n`;\nexport const P = styled.p`\n  position: relative;\n  margin-bottom: 10px;\n  &::after {\n    position: absolute;\n    content: '';\n    bottom: -4px;\n    left: 0;\n    width: 30%;\n    height: 2px;\n    background-color: #a8abab;\n  }\n`;\nexport const Ul = styled.ul`\n  padding: 0;\n  display: flex;\n  gap: 10px;\n`;\nexport const StyleNavLink = styled(NavLink)`\n  display: inline-block;\n  padding: 3px 5px;\n  border: 1px solid #a8abab;\n  background-color: #a8abab;\n  border-radius: 4px;\n  margin-right: 5px;\n  &:hover {\n    color: white;\n  }\n`;\nexport const Box = styled.div`\n  padding: 20px 0;\n`;\nexport const ButtonBack = styled.button`\n  margin-bottom: 20px;\n  border: 1px solid #a8abab;\n  background-color: #a8abab;\n  border-radius: 4px;\n  padding: 3px 7px;\n  &:hover {\n    color: white;\n  }\n`;\n","import { ApiTmdbId } from 'services/ApiTmdb/ApiTmdb';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport {\n  Averege,\n  Box,\n  ButtonBack,\n  H3,\n  P,\n  StyleNavLink,\n  Ul,\n  Wrapper,\n} from './MovieCard.styled';\nimport noImage from '../../image/no-image.png';\nimport { message } from 'components/message/message';\nconst MovieCard = () => {\n  const { id } = useParams();\n  const [currentMovie, setCurrentMovie] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const goBack = () => navigate(backLink);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMovie() {\n      try {\n        await ApiTmdbId(id, {\n          signal: controller.signal,\n        }).then(results => setCurrentMovie(results.data));\n      } catch (error) {\n        message('error');\n        throw new Error(error);\n      }\n    }\n    getMovie();\n    return controller.abort();\n  }, [id]);\n  if (!currentMovie.id) return;\n\n  return (\n    <Box>\n      <ButtonBack type=\"button\" onClick={goBack}>\n        &lArr; Back\n      </ButtonBack>\n      <H3>{currentMovie.title}</H3>\n      <Wrapper>\n        <div>\n          <img\n            src={\n              currentMovie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${currentMovie.poster_path}`\n                : `${noImage}`\n            }\n            alt={currentMovie.title || currentMovie.original_name}\n            width=\"300px\"\n            heigth=\"300px\"\n          />\n        </div>\n        <div>\n          <Averege> Averege: {currentMovie.vote_average}</Averege>\n          <p>{currentMovie.overview}</p>\n        </div>\n      </Wrapper>\n      <P>Genres</P>\n      <Ul>\n        {currentMovie.genres.map(el => {\n          return <li key={el.id}>-{el.name}-</li>;\n        })}\n      </Ul>\n      <P>Additional information</P>\n      <StyleNavLink to=\"Cast\" state={{ from: backLink }}>\n        Cast\n      </StyleNavLink>\n      <StyleNavLink to=\"reviews\" state={{ from: backLink }}>\n        Reviews\n      </StyleNavLink>\n      <Outlet />\n    </Box>\n  );\n};\nexport default MovieCard;\n"],"names":["H3","styled","Wrapper","Averege","P","Ul","StyleNavLink","NavLink","Box","ButtonBack","id","useParams","useState","currentMovie","setCurrentMovie","navigate","useNavigate","backLink","useLocation","state","from","useEffect","controller","AbortController","ApiTmdbId","signal","then","results","data","message","Error","getMovie","abort","type","onClick","title","src","poster_path","noImage","alt","original_name","width","heigth","vote_average","overview","genres","map","el","name","to"],"sourceRoot":""}