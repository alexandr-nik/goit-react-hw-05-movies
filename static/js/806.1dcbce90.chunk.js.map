{"version":3,"file":"static/js/806.1dcbce90.chunk.js","mappings":"8QACaA,EAAMC,EAAAA,GAAAA,IAAH,2CAGHC,EAAID,EAAAA,GAAAA,EAAH,wOAaDE,EAAMF,EAAAA,GAAAA,EAAH,6C,SCoChB,EAhDgB,WACd,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KA0BA,IAxBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACX,IAAMI,EAAa,IAAIC,gBACjBC,EAAQ,mCAAG,wGAEPC,EAAAA,EAAAA,IAAmBb,EAAI,CAC3Bc,OAAQJ,EAAWI,SAElBC,MAAK,SAAAC,GAEJ,OADAZ,EAAgBY,EAAQC,KAAKD,SACtBA,EAAQC,KAAKD,OACrB,IACAD,MAAK,SAAAG,GACCA,EAAIC,QAAQX,GAAY,EAC9B,IAXU,4DAaP,IAAIY,MAAJ,MAbO,uBAebd,GAAW,GAfE,0EAAH,qDAmBd,OADAM,IACOF,EAAWW,OACnB,GAAE,CAACrB,IACCG,EACL,OACE,gCACGE,IAAW,yCACXF,EAAagB,QAAU,GACtBhB,EAAamB,KAAI,SAACC,EAAIC,GACpB,OACE,UAAC5B,EAAD,YACE,UAACE,EAAD,sBAAYyB,EAAGE,WACf,uBAAIF,EAAGG,YAFCF,EAKb,KAEDjB,IAAY,SAACR,EAAD,8CAGnB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Div = styled.div`\n  margin: 20px 0;\n`;\nexport const P = styled.p`\n  position: relative;\n  margin-bottom: 5px;\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n    width: 20%;\n    height: 2px;\n    background-color: #a8abab;\n  }\n`;\nexport const Mes = styled.p`\n  margin-top: 10px;\n`;\n","import { ApiTmdbReviewMovie } from 'services/ApiTmdb/ApiTmdb';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Div, Mes, P } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviewsMovie, setReviewsMovie] = useState();\n  const [loading, setLoading] = useState(false);\n  const [noReview, setNoReview] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const controller = new AbortController();\n    const getMovie = async () => {\n      try {\n        await ApiTmdbReviewMovie(id, {\n          signal: controller.signal,\n        })\n          .then(results => {\n            setReviewsMovie(results.data.results);\n            return results.data.results;\n          })\n          .then(res => {\n            if (!res.length) setNoReview(false);\n          });\n      } catch (error) {\n        throw new Error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovie();\n    return controller.abort();\n  }, [id]);\n  if (!reviewsMovie) return;\n  return (\n    <>\n      {loading && <div>Loading....</div>}\n      {reviewsMovie.length >= 1 &&\n        reviewsMovie.map((el, index) => {\n          return (\n            <Div key={index}>\n              <P>Author: {el.author}</P>\n              <p>{el.content}</p>\n            </Div>\n          );\n        })}\n\n      {!noReview && <Mes>Sorry no reviews on this film</Mes>}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["Div","styled","P","Mes","id","useParams","useState","reviewsMovie","setReviewsMovie","loading","setLoading","noReview","setNoReview","useEffect","controller","AbortController","getMovie","ApiTmdbReviewMovie","signal","then","results","data","res","length","Error","abort","map","el","index","author","content"],"sourceRoot":""}